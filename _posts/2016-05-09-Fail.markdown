---
layout:     post
title:      "Fail"
subtitle:   "Work"
date:       2016-05-09 23:00:00
author:     "chne"
header-img: "img/failure.png"
---
> 4月的时候工作上分配给我2个任务，看起来都是不简单的。但是，在实际的操作过程中我却觉得还好一切都在掌握的感觉时间怎么说呢？相对也还算是比较
空余的，可是最后的结果却是这2个任务我做的很累而且还是错误百出竟然还遗漏了好几个需求。堪称是工作以来就惨痛、蛋疼的一次经历实在是不想有再一次
的经历。


## Why

说实话连我自己一开始的时候也搞不明白为什么我明明没有在这两个工作上少花时间，做的还那么累。结果却是这么的惨痛、不堪这绝对不是因为没有花时间
所以我也在内心问自己Why?


等自己闲下来后有空了，好好思索了一番问题主要出现在两个地方:

+ 开始
+ 结束

### 开始
任务一开始的时候，其实我还是很小心翼翼的因为这两个任务都不算简单。但是，随着开始了解发现其实并没有那么难所以，内心有一定程度的
放松。而且，在初步的常识过程中自我感觉比较顺利所以就没有去了解背后的逻辑而是仅仅凭着表面的效果和需求的比较接近就当成是完成了。
更重要的是因为在这种懒散、大意的心情下没有仔细的分解需求觉得差不多了或者任务只要完成某些功能这两个需求就算是完成了。
结果导致出现了以下这些问题:
+ 需求遗漏
+ 因为不是深入的了解逻辑而是投机取消，所以导致并不能完全满足需求有个模块需要反复的推倒重来
+ 缺乏科学、有效的计划安排

### 结束
如果，说开始时候的原因导致了上面这些问题的出现那么最后局势发展到最后那么惨痛的结局就是开发结束阶段的验收方式存在致命的问题。因为，
如果有问题那么在判断开发是否完成的验收阶段能够及时的发现这些问题，并做出有效的整改那么还是有挽回的希望。但是因为以下的这些原因：

+ 没有有效的测试用例
+ 没有严格参考需求文档进行验收
+ 懒散、消极的态度

Solution

每次失败的过后我们最应该做的不是悔恨当初的不该以及责备命运的不堪，最应该做的是从中吸取教训永远不要再犯相同的错误。
针对这次的经历总结了以下几点需要注意和改进的事项:

+ 任务分解阶段，一定一定要把需求吃透将需求分解成一个个可执行的开发任务
+ 同时根据需求编写测试用例，确保验收时候测试用例能够覆盖功能
+ 不管是简单还是困难的任务，都要保持一颗平常心去面对积极认真对待
+ 开发过程中注意业务变更的邮件，避免出现需求变更信息的遗漏
+ 验收过程中严格执行，确保需求文档中提到的每个场景都进行了有效测试。避免想当然以及偷懒情况的出现


失败并不可怕，可怕的是从此一蹶不振或者是自欺欺人。


